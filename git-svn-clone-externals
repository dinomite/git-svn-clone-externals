#!/bin/bash

set -e

toplevel_directory="$(git rev-parse --show-cdup)"
[ -n "$toplevel_directory" ] && { echo "please run from the toplevel directory"; exit 1; }


function call()
{
    cmd="$@"
    pwd
    echo "\`$cmd\`"
    eval "$cmd"
    return "$?"
}

function do_clone()
{
    echo "Cloning from: $remote_url"
    echo "Local clone directory: .git_externals/$local_clone_directory"

    test -d .git_externals || return 1
    module=`echo $remote_url|sed 's,\(.*\)\(/trunk\|/branch.*\|/tag.*\)$,\1,'`
    branch=`echo $remote_url|sed 's,\(.*\)\(/trunk\|/branch.*\|/tag.*\)$,\2,'|sed 's,^/,,'`
    if [[ $branch = $remote_url ]]; then
        branch=""
    fi
    (
        cd .git_externals
        if [ -d "$local_clone_directory" ]; then
            (
                cd "$local_clone_directory"
                call git svn fetch --all
            )
        else
            tags="tags"
            brch="branches"
            branchpath=$(echo $branch|cut -f1 -d/)
            echo $tags|grep $branchpath >/dev/null 2>&1 && tags=$branchpath
            echo $brch|grep $branchpath >/dev/null 2>&1 && brch=$branchpath

            if [ "$module" = "$remote_url" ]; then
                # URL does not contains any trunk, branches or tags part, so we dont need
                # additional options for git-svn
                call git svn clone --quiet -r HEAD "$revision" "$module" "$local_clone_directory"
            else
                call git svn clone --quiet -r HEAD "$revision" "$module" -T trunk -b $brch -t $tags "$local_clone_directory"
            fi

        fi
        (
            branch="$(echo ${branch}|sed 's,/$,,')"
            if [ -n "$branch" ]; then
                cd "$local_clone_directory"
                call git reset --hard $branch
            fi
        )
    )
}

function do_link()
{
    src_dir="$1"
    target_link="$2"
    base="$(dirname $target_link)"
    (
        # Make directory for external, if necessary
        if [ ! -d "$base" -a ! -h "$base" ]; then
            mkdir -p "$base"
        fi

        # Link from the external's parent directory
        cd $base
        from="${git_root}/.git_externals/${src_dir}"
        to="${git_root}/${target_link}"

        if [ "$git_root" == `pwd -P` ]; then # External is at repo root
            clean_from=$(echo "${from}" | sed "s,${git_root},.,")
            clean_to=$(echo "${to}" | sed "s,${git_root},.,")
        else # External is below repo root
            # awk can't deal with ... as a field separator
            depth=$(echo "${from}"|sed 's/\.\.\./<>/g'|awk 'BEGIN {FS="<>"} {print NF-1}')

            # Build the necessary amount of path relativity
            relative=""
            while [[ $depth -gt 0 ]]; do
                relative="../$relative"
                depth=$((depth - 1))
            done

            # Create the relative paths
            clean_from=$(echo "${from}" | sed "s,${git_root},${relative},")
            clean_to=$(echo "${to}" | sed "s,${git_root},${relative},")
        fi
        echo "Linking to: ${target_link}"
        call ln -sfh "${clean_from}" "${clean_to}"
    )
}

function do_excludes()
{
    dir="$1"
    git_excludes_path=.git/info/exclude
    if ! grep -q '^.git_externals$' "$git_excludes_path"
    then
        echo .git_externals >> "$git_excludes_path"
    fi

    if ! grep -q '^'"$dir"'$' "$git_excludes_path"
    then
        echo "$dir" >> "$git_excludes_path"
    fi
}
repository_root=`git svn info | grep -E 'Repository Root:' | sed -e 's/Repository Root: //g'`

git_rev_parse=$(git rev-parse --show-cdup)
if [ "$git_rev_parse" != "" ]; then
    cd $git_rev_parse
fi

git_root=`pwd -P`

git svn show-externals|grep -vE '#|^$'|sed -e 's/\(.*\)\^\(.*\) \(.*\)/\1\3 $repository_root\2/g'|while read -a words
do
    [ -z "${words[*]}" ] && continue

    local_clone_directory="$(echo ${words[0]}|sed 's,^/,,'|sed 's,/,...,g')"
    local_directory_symlink="$(echo ${words[0]}|sed 's,^/,,')"
    echo "=====================" $local_directory_symlink "====================="

    revision=""
    remote_url="${words[1]}"

    if [ -n "${words[2]}" ]; then
        revision="${words[1]}"
        remote_url="${words[2]}"
    fi

    if [ -n "$USE_SSH" ]; then
        echo "Rewriting url to use SVN+SSH."
        shopt -s extglob
        remote_url="${remote_url/+(http|https)/svn+ssh}"
    fi

    [ -z "${remote_url}" ] && continue

    export local_clone_directory local_directory_symlink revision remote_url

    dir=`dirname $local_clone_directory`
    [ -d ".git_externals/$dir" ] || mkdir -p ".git_externals/$dir"

    do_clone "$revision" "$remote_url" "$local_clone_directory" || exit
    do_link "$local_clone_directory" "$local_directory_symlink"
    do_excludes "$local_directory_symlink"

    echo ""
done
